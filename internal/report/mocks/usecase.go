// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/report/usecase.go

// Package mock_report is a generated GoMock package.
package mock_report

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/majidbl/discount/internal/models"
)

// MockUseCase is a mock of UseCase interface.
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase.
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance.
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUseCase) Create(ctx context.Context, wallet *models.Report) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, wallet)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUseCaseMockRecorder) Create(ctx, wallet interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUseCase)(nil).Create), ctx, wallet)
}

// GetByGiftCode mocks base method.
func (m *MockUseCase) GetByGiftCode(ctx context.Context, giftCode string) ([]*models.Report, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByGiftCode", ctx, giftCode)
	ret0, _ := ret[0].([]*models.Report)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByGiftCode indicates an expected call of GetByGiftCode.
func (mr *MockUseCaseMockRecorder) GetByGiftCode(ctx, giftCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByGiftCode", reflect.TypeOf((*MockUseCase)(nil).GetByGiftCode), ctx, giftCode)
}

// GetGiftCodeCountUsage mocks base method.
func (m *MockUseCase) GetGiftCodeCountUsage(ctx context.Context, usage string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGiftCodeCountUsage", ctx, usage)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGiftCodeCountUsage indicates an expected call of GetGiftCodeCountUsage.
func (mr *MockUseCaseMockRecorder) GetGiftCodeCountUsage(ctx, usage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGiftCodeCountUsage", reflect.TypeOf((*MockUseCase)(nil).GetGiftCodeCountUsage), ctx, usage)
}
